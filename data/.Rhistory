install.packages("tidyverse")
#abaixo inserir nos parenteses o caminho para crimes data
crimes = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(dslabs)
install.packages("dslabs")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(ggplot2)
library(dslabs)
library(tidyverse)
#abaixo inserir nos parenteses o caminho para crimes data
crimes = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
data = crimes
install.packages("tidyverse")
library(tidyverse)
#abaixo inserir nos parenteses o caminho para crimes data
crimesBoston = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
#omite valores sem preenchimento
crimesBoston = na.omit(crimesBoston)
#filtrando
crimes <- filter(crimesBoston, OFFENSE_CODE_GROUP %in% c("Larceny", "Drug Violation", "Homicide"))
larceny <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Larceny"))
drug_violation <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Drug Violation"))
homicide <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Homicide"))
#grafico de acordo com horario
ggplot(data=crimes, aes(x=HOUR, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#grafico de acordo com horario
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$HOUR)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
#grafico de acordo com o dia da semana
ggplot(data=crime_type, aes(x=DAY_OF_WEEK, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#grafico de acordo com o dia da semana
ggplot(data=crimes, aes(x=DAY_OF_WEEK, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="Day of the week", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend("bottomrigth", inset=.05), legend = c('Drug Violation','Larceny','Homicide'))
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend("bottomrigth", inset=.05, legend = c('Drug Violation','Larceny','Homicide')))
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend("bottomright", inset=.05, legend = c('Drug Violation','Larceny','Homicide')))
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend("bottomright", inset=0.05, legend = c('Drug Violation','Larceny','Homicide')))
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
#grafico de acordo com horario
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$HOUR)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"), legend("bottomright", inset=0.05, legend = c('Drug Violation','Larceny','Homicide')))
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="Day of the week", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
#grafico de acordo com horario
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$HOUR)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"),legend = c('Drug Violation','Larceny','Homicide'))
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="Day of the week", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
#retirando outliers
crime_larceny <-
drug_violation <- drug_violations[(drug_violation$Long != -1),]
#retirando outliers
crime_larceny <-
drug_violation <- drug_violation[(drug_violation$Long != -1),]
#retirando outliers
larceny <- larceny[(larceny$Long != -1),]
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(data = crime_larceny) +
geom_point(aes(x = Lat, y = Long, col = DISTRICT)) +
ggtitle("Larceny crime")
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(data = crime_larceny, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(larceny, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#drogas
ggplot(drug_violation, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#criando um dataset com os numeros de cada ano para cada tipo de crime
larceny <-c (nrow(subset(larceny, YEAR==2015)), nrow(subset(larceny, YEAR==2016)), nrow(subset(larceny, YEAR==2017)), nrow(subset(larceny, YEAR==2018)))
drug <-c (nrow(subset(drug_violation, YEAR==2015)), nrow(subset(drug_violation, YEAR==2016)), nrow(subset(drug_violation, YEAR==2017)), nrow(subset(drug_violation, YEAR==2018)))
homicide <-c (nrow(subset(homicide, YEAR==2015)), nrow(subset(homicide, YEAR==2016)), nrow(subset(homicide, YEAR==2017)), nrow(subset(homicide, YEAR==2018)))
years <-c (2015, 2016, 2017, 2018)
crime_evolution <- data.frame(larceny, drug, homicide, years)
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny)) +
geom_line()+
geom_point()
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny)) +
geom_line()
larceny
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#filtra-los para os tipos de crimes e distritos mais violentos
D4 <- filter(crimes, DISTRICT %in% ("D4"))
A1 <- filter(crimes, DISTRICT %in% ("A1"))
B2 <- filter(crimes, DISTRICT %in% ("B2"))
d4_evolution <-c (nrow(subset(D4, YEAR == 2015)), nrow(subset(D4, YEAR == 2016)), nrow(subset(D4, YEAR == 2017)), nrow(subset(D4, YEAR == 2018)))
a1_evolution <-c (nrow(subset(A1, YEAR == 2015)), nrow(subset(A1, YEAR == 2016)), nrow(subset(A1, YEAR == 2017)), nrow(subset(A1, YEAR == 2018)))
b2_evolution <-c (nrow(subset(B2, YEAR == 2015)), nrow(subset(B2, YEAR == 2016)), nrow(subset(B2, YEAR == 2017)), nrow(subset(B2, YEAR == 2018)))
districts_evolution <- data.frame(d4_evolution, a1_evolution, b2_evolution, years)
View(districts_evolution)
ggplot(districts_evolution, aes(years, d4_evolution)) +
geom_line()+
geom_point()+
ggtitle("District D4 evolution through the years")
ggplot(districts_evolution, aes(years, a1_evolution)) +
geom_line()+
geom_point()+
ggtitle("District A1 evolution through the years")
ggplot(districts_evolution, aes(years, b2_evolution)) +
geom_line()+
geom_point()+
ggtitle("District B2 evolution through the years")
D4 <-c (nrow(subset(D4, YEAR == 2015)), nrow(subset(D4, YEAR == 2016)), nrow(subset(D4, YEAR == 2017)), nrow(subset(D4, YEAR == 2018)))
A1 <-c (nrow(subset(A1, YEAR == 2015)), nrow(subset(A1, YEAR == 2016)), nrow(subset(A1, YEAR == 2017)), nrow(subset(A1, YEAR == 2018)))
B2 <-c (nrow(subset(B2, YEAR == 2015)), nrow(subset(B2, YEAR == 2016)), nrow(subset(B2, YEAR == 2017)), nrow(subset(B2, YEAR == 2018)))
districts_evolution <- data.frame(D4, A1, B2, years)
ggplot(districts_evolution, aes(years, D4)) +
geom_line()
ggplot(districts_evolution, aes(years, A1)) +
geom_line()
ggplot(districts_evolution, aes(years, B2)) +
geom_line()
#criando um dataset com os numeros de cada ano para cada tipo de crime
larceny <-c (nrow(subset(larceny, YEAR==2015)), nrow(subset(larceny, YEAR==2016)), nrow(subset(larceny, YEAR==2017)), nrow(subset(larceny, YEAR==2018)))
drug <-c (nrow(subset(drug_violation, YEAR==2015)), nrow(subset(drug_violation, YEAR==2016)), nrow(subset(drug_violation, YEAR==2017)), nrow(subset(drug_violation, YEAR==2018)))
homicide <-c (nrow(subset(homicide, YEAR==2015)), nrow(subset(homicide, YEAR==2016)), nrow(subset(homicide, YEAR==2017)), nrow(subset(homicide, YEAR==2018)))
years <-c (2015, 2016, 2017, 2018)
crime_evolution <- data.frame(larceny, drug, homicide, years)
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny)) +
geom_line()
#criando um dataset com os numeros de cada ano para cada tipo de crime
larceny <-c (nrow(subset(larceny, YEAR==2015)), nrow(subset(larceny, YEAR==2016)), nrow(subset(larceny, YEAR==2017)), nrow(subset(larceny, YEAR==2018)))
#leitura do dataset
crimesBoston = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
#omite valores sem preenchimento
crimesBoston = na.omit(crimesBoston)
#filtrando
crimes <- filter(crimesBoston, OFFENSE_CODE_GROUP %in% c("Larceny", "Drug Violation", "Homicide"))
larceny <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Larceny"))
drug_violation <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Drug Violation"))
homicide <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Homicide"))
#retirando outliers
larceny <- larceny[(larceny$Long != -1),]
drug_violation <- drug_violation[(drug_violation$Long != -1),]
#grafico de acordo com horario
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$HOUR)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"),legend = c('Drug Violation','Larceny','Homicide'))
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="Day of the week", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(larceny, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#drogas
ggplot(drug_violation, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#assassinato
ggplot(homicide, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#criando um dataset com os numeros de cada ano para cada tipo de crime
larceny <-c (nrow(subset(larceny, YEAR==2015)), nrow(subset(larceny, YEAR==2016)), nrow(subset(larceny, YEAR==2017)), nrow(subset(larceny, YEAR==2018)))
drug <-c (nrow(subset(drug_violation, YEAR==2015)), nrow(subset(drug_violation, YEAR==2016)), nrow(subset(drug_violation, YEAR==2017)), nrow(subset(drug_violation, YEAR==2018)))
homicide <-c (nrow(subset(homicide, YEAR==2015)), nrow(subset(homicide, YEAR==2016)), nrow(subset(homicide, YEAR==2017)), nrow(subset(homicide, YEAR==2018)))
years <-c (2015, 2016, 2017, 2018)
crime_evolution <- data.frame(larceny, drug, homicide, years)
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny)) +
geom_line()
ggplot(crime_evolution, aes(years, drug)) +
geom_line()
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny)) +
geom_line()
ggplot(crime_evolution, aes(years, homicide)) +
geom_line()
#procurando os distritos mais violentos em geral
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar()
#procurando os distritos mais violentos em geral
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar()
#procurando os distritos mais violentos em geral
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar()
#procurando os distritos mais violentos em geral
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar()
#filtra-los para os tipos de crimes e distritos mais violentos
D4 <- filter(crimes, DISTRICT %in% ("D4"))
A1 <- filter(crimes, DISTRICT %in% ("A1"))
B2 <- filter(crimes, DISTRICT %in% ("B2"))
D4 <-c (nrow(subset(D4, YEAR == 2015)), nrow(subset(D4, YEAR == 2016)), nrow(subset(D4, YEAR == 2017)), nrow(subset(D4, YEAR == 2018)))
A1 <-c (nrow(subset(A1, YEAR == 2015)), nrow(subset(A1, YEAR == 2016)), nrow(subset(A1, YEAR == 2017)), nrow(subset(A1, YEAR == 2018)))
B2 <-c (nrow(subset(B2, YEAR == 2015)), nrow(subset(B2, YEAR == 2016)), nrow(subset(B2, YEAR == 2017)), nrow(subset(B2, YEAR == 2018)))
districts_evolution <- data.frame(D4, A1, B2, years)
ggplot(districts_evolution, aes(years, D4)) +
geom_line()
ggplot(districts_evolution, aes(years, A1)) +
geom_line()
ggplot(districts_evolution, aes(years, B2)) +
geom_line()
install.packages("tidyverse")
crimes = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
View(crimes)
data = crimes
#omite valores sem preenchimento
crimes = na.omit(crimes)
#filtrando tipos de crimes
crime_type <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Larceny", "Drug Violation", "Homicide"))
crime_larceny <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Larceny"))
crime_drug_violation <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Drug Violation"))
crime_homicide <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Homicide"))
#retirando os dados considerados outliers
crime_larceny <- crime_larceny[-c(which(crime_larceny$Long>-10)),]
crime_drug_violation <- crime_drug_violation[-c(which(crime_drug_violation$Long>-10)),]
#grafico de acordo com horario
ggplot(data=crime_type, aes(x=HOUR, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#grafico de acordo com o dia da semana
ggplot(data=crime_type, aes(x=DAY_OF_WEEK, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(data = crime_larceny) +
geom_point(aes(x = Lat, y = Long, col = DISTRICT)) +
ggtitle("Larceny crime")
#drogas
ggplot(data = crime_drug_violation) +
geom_point(aes(x = Lat, y = Long, col = DISTRICT)) +
ggtitle("Drug Violation crime")
#assassinato
ggplot(data = crime_homicide) +
geom_point(aes(x = Lat, y = Long, col = DISTRICT)) +
ggtitle("Homicide crime")
#craindo um dataset com os numeros de cada ano para cada tipo de crime
larceny_evolution <-c (nrow(subset(crime_larceny, YEAR==2015)), nrow(subset(crime_larceny, YEAR==2016)), nrow(subset(crime_larceny, YEAR==2017)), nrow(subset(crime_larceny, YEAR==2018)))
drug_evolution <-c (nrow(subset(crime_drug_violation, YEAR==2015)), nrow(subset(crime_drug_violation, YEAR==2016)), nrow(subset(crime_drug_violation, YEAR==2017)), nrow(subset(crime_drug_violation, YEAR==2018)))
homicide_evolution <-c (nrow(subset(crime_homicide, YEAR==2015)), nrow(subset(crime_homicide, YEAR==2016)), nrow(subset(crime_homicide, YEAR==2017)), nrow(subset(crime_homicide, YEAR==2018)))
years <-c (2015, 2016, 2017, 2018)
crime_evolution <- data.frame(larceny_evolution, drug_evolution, homicide_evolution, years)
#serie temporal em linha
ggplot(crime_evolution, aes(years, larceny_evolution)) +
geom_line()+
geom_point()+
ggtitle("Larceny crime evolution through the years")
ggplot(crime_evolution, aes(years, drug_evolution)) +
geom_line()+
geom_point()+
ggtitle("Drug Violation crime evolution through the years")
ggplot(crime_evolution, aes(years, homicide_evolution)) +
geom_line()+
geom_point()+
ggtitle("Homicide crime evolution through the years")
#procurando os distritos mais violentos em geral
ggplot(data=crime_type, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar(stat="identity", width=0.5)
#procurando os distritos mais violentos em geral
ggplot(crimes, aes(x=DISTRICT, y=OFFENSE_CODE_GROUP, fill = OFFENSE_CODE_GROUP)) +
geom_bar()
#leitura do dataset
crimesBoston = read.csv('/home/carloseduardo/Área de Trabalho/crimes-in-Boston/crime.csv', header = TRUE)
#omite valores sem preenchimento
crimesBoston = na.omit(crimesBoston)
#filtrando
crimes <- filter(crimesBoston, OFFENSE_CODE_GROUP %in% c("Larceny", "Drug Violation", "Homicide"))
larceny <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Larceny"))
drug_violation <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Drug Violation"))
homicide <- filter(crimes, OFFENSE_CODE_GROUP %in% c("Homicide"))
#retirando outliers
larceny <- larceny[(larceny$Long != -1),]
drug_violation <- drug_violation[(drug_violation$Long != -1),]
#grafico de acordo com horario
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$HOUR)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="HOUR", col=c("green","red","black"),legend = c('Drug Violation','Larceny','Homicide'))
#grafico de acordo com o dia da semana
counts <- table(crimes$OFFENSE_CODE_GROUP, crimes$DAY_OF_WEEK)
barplot(counts, main="OFFENSE_CODE_GROUP",
xlab="Day of the week", col=c("green","red","black"), legend = c('Drug Violation','Larceny','Homicide'))
#grafico de cada tipo de crime: lat-lon
#furto
ggplot(larceny, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#drogas
ggplot(drug_violation, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
#assassinato
ggplot(homicide, aes(x = Lat, y = Long, col = DISTRICT)) +
geom_point()
library(factoextra)
library(tidyverse)
library(FNN)
library(rpart)
library(rpart.plot)
library(e1071)
R.version
############################################
### Classification of handwritten digits ###
############################################
install.packages("tidverse")
install.packages("factoextra")
library(factoextra)
install.packages(rgl)
install.packages("rgl")
library(rgl)
install.packages("devtools")
library(devtools)
install.packages("rgl")
library(rgl)
library(rgl)
library(rgl)
library(rgl)
library(rgl)
fviz_pca(df.pca)
library(ggplot2)
library(caret)
library(factoextra)
library(tidyverse)
library(FNN)
library(rpart)
library(rpart.plot)
library(e1071)
fviz_pca(df.pca)
location <- "/home/carloseduardo/projects/classification_handwritten_digits/data"
#setting working directory
setwd(location)
#loading files
file_list <- list.files(path = location)
#reading the files and creating data frame
df <- data.frame()
class <- c()
for(file in file_list){
class <- c(class, as.numeric(unlist(strsplit(file, '_'))[1]))
content_file <- read_lines(file)
content_file <- content_file[-(1:3)]
content_file <- as.numeric(unlist(strsplit(content_file, ' ')))
df <- matrix(unlist(content_file), nrow = nrow(df) + 1, ncol=length(content_file))
df<-as.data.frame(df)
df$class <- class
print(file)
}
idxs <- sample(1:nrow(df), as.integer(0.8*nrow(df)))
train_rows <- df[idxs,]
test_rows <- df[-idxs,]
class_train <- train_rows[,4097]
class_test <- factor(test_rows[,4097])
train <- train_rows[,-4097]
test <- test_rows[,-4097]
##############################################
#clustering algorithm
##############################################
df_cluster <- df[,-4097]
kmeans_result <- kmeans(df_cluster, 10)
fviz_cluster(kmeans_result, data = df)
fviz_cluster(kmeans_result, data = df)
fviz_nbclust(df_cluster, kmeans, method = "wss")
ggplot(data = tes, aes(y= tes$`clusters[, 1]`, x= row.names(tes))) +
geom_bar(stat = "identity")
clusters <- table(df$class, kmeans_result$cluster)
plot(df[c(1,4096)], col = kmeans_result$cluster)
tes <- as.data.frame(clusters[,1])
ggplot(data = tes, aes(y= tes$`clusters[, 1]`, x= row.names(tes))) +
geom_bar(stat = "identity")
View(clusters)
clusters$Freq
clusters[1,]
ggplot(data = clusters, aes(y = clusters$Freq))
ggplot(data = clusters, aes(y = clusters))
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`, color=row.names(tes))) +
geom_bar(stat = "identity")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", color=row.names(tes))
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", color=row.names(tes), fill="white")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", color=blue, fill="white")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", color="blue", fill="white")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", color="blue",)
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue") +
theme_minimal()
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue")
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('IDHM Renda por Esperança de Vida') +
xlab('Esperança de Vida') +
ylab('IDHM Renda')
ggplot(data = tes, aes(row.names(tes),tes$`clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('Quantidade de cada exemplar no cluster 1') +
xlab('Exemplares') +
ylab('Quantidade de exemplar')
ggplot(data = clusters, aes(row.names(clusters),clusters[, 1]`)) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('Quantidade de cada exemplar no cluster 1') +
xlab('Exemplares') +
ylab('Quantidade de exemplar') +
geom_text(aes(label=), vjust=1.6, color="white", size=3.5)
ggplot(data = clusters, aes(row.names(clusters),clusters[, 1])) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('Quantidade de cada exemplar no cluster 1') +
xlab('Exemplares') +
ylab('Quantidade de exemplar') +
geom_text(aes(label=), vjust=1.6, color="white", size=3.5)
ggplot(data = clusters, aes(row.names(clusters),clusters[, 1])) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('Quantidade de cada exemplar no cluster 1') +
xlab('Exemplares') +
ylab('Quantidade de exemplar') +
geom_text(aes(label=), vjust=1.6, color="white", size=3.5)
ggplot(data = clusters, aes(row.names(clusters),clusters[, 1])) +
geom_bar(stat = "identity", fill="steelblue") +
ggtitle('Quantidade de cada exemplar no cluster 1') +
xlab('Exemplares') +
ylab('Quantidade de exemplar') +
geom_text(aes(label=), vjust=1.6, color="white", size=3.5)
clusters <- as.data.frame(table(df$class, kmeans_result$cluster))
clusters
kds
